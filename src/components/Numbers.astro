---
const numbers: {
  value: string;
  text: string;
}[] = [
  {
    value: "01",
    text: "Дня тренировок",
  },
  {
    value: "04",
    text: `Часа чистого времени за&nbsp;рулем`,
  },
  {
    value: "10",
    text: `Максимальное количество упражнений от&nbsp;мастера автоспорта`,
  },
  {
    value: "50",
    text: `Километров пробега по&nbsp;полигону`,
  },
  {
    value: "90",
    text: "Км/ч — максимальная скорость маневров",
  },
];
---

<div class="numbers__wrapper">
  <section class="numbers-screen">
    <main class="numbers">
      {
        numbers.map((number) => (
          <div class="number">
            <div class="number__value">{number.value}</div>
            <div class="number__text" set:html={number.text} />
          </div>
        ))
      }
      <h2 class="numbers-screen__title">
        <span class="first-line">дадут тебе больше,</span><span
          class="second-line">чем годы за рулем</span
        >
        <span class="title-line"></span>
      </h2>
    </main>
  </section>
</div>

<style>
  .numbers__wrapper {
    max-width: 100%;
    overflow-x: hidden;
  }
  .numbers-screen {
    /* padding: 90px 0; */
    margin: 90px 0;
  }
  .numbers-screen__title {
    flex-shrink: 0;
    font-size: 70px;
    position: relative;
  }
  .numbers-screen__title > span {
    display: block;
    white-space: nowrap;
  }
  .first-line {
    color: var(--color-accent);
    margin-bottom: 30px;
    position: relative;
    z-index: 1;
  }

  .title-line {
    z-index: 0;
    display: block;
    position: absolute;
    background: #a1d2ff;
    height: 25px;
    width: 767px;
    left: -10px;
    top: 52px;
  }

  .second-line {
    padding-left: 100px;
  }

  .numbers-screen {
    padding: var(--container-padding);
    padding-right: 0;
    color: #e4f2ff;
    display: flex;
    justify-content: flex-end;
  }

  .numbers {
    display: flex;
    gap: 40px;
    transform: translateX(100%);
  }
  .number__value {
    font-family: var(--heading-font);
    font-style: italic;
    font-weight: 700;
    font-size: 180px;
    line-height: 198px;
    color: inherit;
    width: 260px;
    flex-shrink: 0;
  }

  .number__text {
    font-weight: 400;
    font-size: 22px;
    line-height: 28px;
    color: #646464;
  }

  @media (max-width: 1023px) {
    /* .numbers-screen__title {
        max-width: 100vw;
    } */
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  const mm = gsap.matchMedia();

  gsap.registerPlugin(ScrollTrigger);

  
  let pinWrap: HTMLElement = document.querySelector(".numbers");

  let title: HTMLElement = document.querySelector(".numbers-screen__title");
  let pinWrapWidth =
      pinWrap.offsetWidth - title.offsetWidth - window.innerWidth / 2;
      console.log('pinWrap.offsetWidth:', pinWrap.offsetWidth);
      console.log('title.offsetWidth:', title.offsetWidth);
      console.log('window.innerWidth / 2:', window.innerWidth / 2);
      // debugger;

    gsap.to(pinWrap, {
        scrollTrigger: {
            scrub: 1.5,
            trigger: '.numbers-screen',
            pin: true,
            start: "center center",
            end: `center+=${pinWrapWidth * 1.5} center`,
        },
        color: "#3CA0FF",
        x: -pinWrapWidth,
        ease: "none",
    });
  // mm.add("(min-width: 1024px)", () => {
  //   gsap.from(".numbers-screen", {
  //     scrollTrigger: {
  //       scrub: 0.5,
  //       trigger: ".numbers-screen",
  //       pin: true,
  //       start: "center center",
  //       end: `${pinWrapWidth}px center`,
  //     },
  //     color: "#3CA0FF",
  //     xPercent: 100,
  //     ease: "none",
  //   });
  // });

//   mm.add("(max-width: 1023px)", () => {
//     gsap.from(".numbers-screen", {
//       scrollTrigger: {
//         scrub: 0.5,
//         trigger: ".numbers-screen",
//         pin: true,
//         start: "center center",
//         end: `${pinWrap.offsetWidth}px center`,
//       },
//       color: "#3CA0FF",
//       xPercent: 100,
//       ease: "none",
//     });
//   });
</script>
